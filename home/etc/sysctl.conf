# See sysctl.conf(5)

#Hide kernel messages from the console
kernel.printk = 3 3 3 3

# Append the PID to the core filename
kernel.core_uses_pid = 1

# Enable hard and soft link protection
fs.protected_hardlinks=1
fs.protected_symlinks=1

# Try to keep kernel address exposures out of various /proc files (kallsyms, modules, etc).
kernel.kptr_restrict=1

# Avoid kernel memory address exposures via dmesg.
kernel.dmesg_restrict=1

# Block non-uid-0 kernel profiling
kernel.perf_event_paranoid=2

# Turn off kexec, even if it's built in.
kernel.kexec_load_disabled=1

# Avoid non-ancestor ptrace access to running processes and their credentials.
kernel.yama.ptrace_scope=1

# Don't accept ICMP redirects. Prevents MITM attacks.
net.ipv4.conf.all.accept_redirects = 0
net.ipv4.conf.default.accept_redirects = 0
net.ipv4.conf.all.secure_redirects = 0
net.ipv4.conf.default.secure_redirects = 0
net.ipv6.conf.all.accept_redirects = 0
net.ipv6.conf.default.accept_redirects = 0

# Don't send ICMP redirects because we are not a router.
net.ipv4.conf.all.send_redirects = 0
net.ipv4.conf.default.send_redirects = 0

# Don't accept IP source route packets because we are not a
# router. Protects against spoofed TCP connections.
net.ipv4.conf.all.accept_source_route = 0
net.ipv4.conf.default.accept_source_route = 0
net.ipv6.conf.all.accept_source_route = 0
net.ipv6.conf.default.accept_source_route = 0

# Don't relay bootp.
net.ipv4.conf.all.bootp_relay = 0

# Don't flush all addresses on an interface when the primary address
# is removed.
net.ipv4.conf.all.promote_secondaries = 1
net.ipv4.conf.default.promote_secondaries = 1

# Strict mode as defined in RFC3704 Strict Reverse Path.
# See: https://wiki.ubuntu.com/ImprovedNetworking/KernelSecuritySettings
net.ipv4.conf.all.rp_filter = 1
net.ipv4.conf.default.rp_filter = 1

# Disable packet forwarding. Enable for WireGuard.
net.ipv4.ip_forward = 0
net.ipv4.conf.all.forwarding = 0
net.ipv4.conf.default.forwarding = 0
net.ipv6.conf.all.forwarding = 0
net.ipv6.conf.default.forwarding = 0

# Don't proxy ARP/NDP. Enable for WireGuard.
net.ipv4.conf.all.proxy_arp = 0
net.ipv4.conf.default.proxy_arp = 0
net.ipv6.conf.all.proxy_ndp = 0
net.ipv6.conf.default.proxy_ndp = 0

# Protection from SYN flood attacks; SYN cookies are only used as
# a fallback.
# Note: It may also impact IPv6 TCP sessions.
# Note: It is evil to use this on high-load servers.
net.ipv4.tcp_syncookies = 1
net.ipv4.tcp_syn_retries = 2
net.ipv4.tcp_synack_retries = 2

# See evil packets in your logs.
net.ipv4.conf.all.log_martians = 1
net.ipv4.conf.default.log_martians = 1

# Ignore ICMP broadcasts.
net.ipv4.icmp_echo_ignore_broadcasts = 1

# Don't ignore directed pings.
net.ipv4.icmp_echo_ignore_all = 0

# Protect against bad error messages.
net.ipv4.icmp_ignore_bogus_error_responses = 1

# Disable IPv6 because it is evil.
#net.ipv6.conf.all.disable_ipv6 = 1
#net.ipv6.conf.default.disable_ipv6 = 1
#net.ipv6.conf.lo.disable_ipv6 = 1

# Tune IPv6.
net.ipv6.conf.all.accept_dad = 0
net.ipv6.conf.default.accept_dad = 0
net.ipv6.conf.all.accept_ra = 0
net.ipv6.conf.default.accept_ra = 0
net.ipv6.conf.all.accept_ra_defrtr = 0
net.ipv6.conf.default.accept_ra_defrtr = 0
net.ipv6.conf.all.accept_ra_pinfo = 0
net.ipv6.conf.default.accept_ra_pinfo = 0
net.ipv6.conf.all.accept_ra_rtr_pref = 0
net.ipv6.conf.default.accept_ra_rtr_pref = 0
net.ipv6.conf.all.autoconf = 0
net.ipv6.conf.default.autoconf = 0
net.ipv6.conf.all.dad_transmits = 0
net.ipv6.conf.default.dad_transmits = 0
net.ipv6.conf.all.router_solicitations = 0
net.ipv6.conf.default.router_solicitations = 0

# Use and prefer IPv6 Privacy Extensions.
net.ipv6.conf.all.use_tempaddr = 2
net.ipv6.conf.default.use_tempaddr = 2

# Decrease IPv6 privacy address preferred lifetime to 8 hours. Deprecates
# temporary addresses after N seconds, after which we change to a new one.
net.ipv6.conf.all.temp_prefered_lft = 28800
net.ipv6.conf.default.temp_prefered_lft = 28800

# Decrease IPv6 privacy address valid lifetime to 72 hours. Invalidates
# IPv6 connections using (deprecated) temporary addresses after N seconds.
net.ipv6.conf.all.temp_valid_lft = 259200
net.ipv6.conf.default.temp_valid_lft = 259200

# Increase maximum number of IPv6 privacy addresses with valid lifetime.
net.ipv6.conf.all.max_addresses = 27
net.ipv6.conf.default.max_addresses = 27

# Increase maximum number of attempts to generate an IPv6 privacy address
# before failing.
net.ipv6.conf.all.regen_max_retry = 7
net.ipv6.conf.default.regen_max_retry = 7

# Decrease maximum value for DESYNC_FACTOR. Decreases lag in IPv6 privacy
# address generation.
net.ipv6.conf.all.max_desync_factor = 160
net.ipv6.conf.default.max_desync_factor = 160

# Try to reuse time-wait connections.
net.ipv4.tcp_tw_reuse = 1

# Avoid falling back to slow start after a connection goes idle. Keep
# it set to 0 usually.
net.ipv4.tcp_slow_start_after_idle = 0

# Use BBR congestion control algorithm with Fair Queue CoDel.
net.core.default_qdisc = fq_codel
net.ipv4.tcp_congestion_control = bbr

# Enable more accurate timestamps. Makes TCP congestion control algorithms
# work better. Recommended for fast networks.
net.ipv4.tcp_timestamps = 1

# Enable smart MTU black hole detection.
# Detect ICMP black holes and adjust the path MTU.
net.ipv4.tcp_mtu_probing = 1
# Bump starting MSS used in discovery to RFC4821 suggested 1024.
net.ipv4.tcp_base_mss = 1024

# Set max number of queued connections on a socket. The default value
# usually is too low. Raise this value substantially to support bursts
# of requests.
net.core.somaxconn = 8192

# Enable TCP window scaling for high-throughput, blazing fast TCP
# performance.
net.ipv4.tcp_window_scaling = 1

# Decrease the time default value for tcp_fin_timeout connection.
net.ipv4.tcp_fin_timeout = 10

# Decrease the time default value for connections to keep alive.
net.ipv4.tcp_keepalive_time = 512
net.ipv4.tcp_keepalive_probes = 10
net.ipv4.tcp_keepalive_intvl = 32

# Limit orphans because each orphan can eat up to 16M of unswappable
# memory.
net.ipv4.tcp_max_orphans = 16384
net.ipv4.tcp_orphan_retries = 0

# Increase size of RPC datagram queue length.
net.unix.max_dgram_qlen = 512

# Don't allow the arp table to become bigger than this.
net.ipv4.neigh.default.gc_thresh3 = 4096

# Tell the gc when to become aggressive with arp table cleaning.
net.ipv4.neigh.default.gc_thresh2 = 2048

# Adjust where the gc will leave arp table alone.
net.ipv4.neigh.default.gc_thresh1 = 1024

# Adjust to arp table gc to cleanup more often.
net.ipv4.neigh.default.gc_interval = 30

# Increase TCP queue length in order to reduce a performance spike with
# relation to timestamps generation.
net.ipv4.neigh.default.proxy_qlen = 96
net.ipv4.neigh.default.unres_qlen = 6

# Increase allowable size of backlog for incoming connections. Try up
# to 262144.
net.core.netdev_max_backlog = 16384

# Set max number half open SYN requests to keep in memory.
net.ipv4.tcp_max_syn_backlog = 8192

# Don't cache ssthresh from previous connection.
net.ipv4.tcp_no_metrics_save = 1
net.ipv4.tcp_moderate_rcvbuf = 1

# Tweak the port range used for outgoing connections.
net.ipv4.ip_local_port_range = 2000 65535

# Turn on BPF JIT hardening, if the JIT is enabled.
net.core.bpf_jit_harden = 2

# Specify the group range allowed to create non-raw icmp sockets.
#
# Usage
#   net.ipv4.ping_group_range = min max
#     1 0            - Nobody, not even root, may create ping
#                      sockets. (default)
#     100 100        - Grant permissions to the single group to either
#                      make /sbin/ping sgid'ed and owned by this group
#                      or to grant permissions to the "netadmins" group.
#     0 4294967295   - Enable it for the world.
#     100 4294967295 - Enable it for the users, but not daemons.
net.ipv4.ping_group_range = 0 2147483647


# Disable User Namespaces, as it opens up a large attack surface to
# unprivileged users.
user.max_user_namespaces = 0

# To avoid long IO stalls for write cache in a real life situation
# with different workloads, we typically want to limit the kernel dirty
# cache size.
#
# Usage
#   vm.dirty_background_ratio = 0.25..0.5 * <dirty_ratio>
vm.dirty_background_ratio = 1
vm.dirty_ratio = 50

# Turn off the OOM killer by default.
#vm.overcommit_memory = 2

# Instruct OOM killer to kill the task triggering an out-of-memory
# condition. Avoids expensive tasklist scans.
#vm.oom_kill_allocating_task = 1

# Allocate up to 97% of physical memory.
vm.overcommit_ratio = 97

# Specify the minimum virtual address a process is allowed to mmap. Helps
# avoid "kernel NULL pointer dereference" defects.
vm.mmap_min_addr = 4096

# Improve KASLR effectiveness.
vm.mmap_rnd_bits = 32
vm.mmap_rnd_compat_bits = 16

# Keep at least 128MB of free RAM space available. When set to its default
# value, it is possible to encounter memory exhaustion symptoms when
# free memory should in fact be available. Setting <vm.min_free_kbytes>
# to 5-6% of the total physical memory but no more than 2GB can prevent
# this problem.
vm.min_free_kbytes = 131072

#Reducing Swap usage
# Page-cluster 0 means tuning to singular pages rather than the default 3 which caches 8 for HDD tuning, which can lower latency.
# Swappiness 80 because the improved performance of zram allows more usage without any adverse affects from the default of 60. It can be raised up to 100 but that will increase process queue on intense loads such as boot time.
vm.swappiness= 80
vm.page-cluster= 0
vm.vfs_cache_pressure= 500
